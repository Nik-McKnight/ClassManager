// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Convert days of week to enum?
model Semester {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(255)
  start_date String   @db.VarChar(255)
  end_date   String   @db.VarChar(255)
  Course     Course[]
}

model Event {
  id         Int     @id @default(autoincrement())
  name       String  @db.VarChar(255)
  start_date String  @db.VarChar(255)
  end_date   String  @db.VarChar(255)
  is_holiday Boolean @default(false)
}

model Course {
  id              Int          @id @default(autoincrement())
  name            String       @db.VarChar(255)
  course_number   String       @db.VarChar(255)
  credit_hours    Int          @default(1)
  semester_id     Int?
  monday          Boolean      @default(false)
  tuesday         Boolean      @default(false)
  wednesday       Boolean      @default(false)
  thursday        Boolean      @default(false)
  friday          Boolean      @default(false)
  start_time      String?      @db.VarChar(255)
  end_time        String?      @db.VarChar(255)
  subject         String       @db.VarChar(255)
  location        String       @db.VarChar(255)
  description     String?      @db.VarChar(255)
  capacity        Int
  enrollment_open Boolean      @default(false)
  asynchronous    Boolean      @default(false)
  semester        Semester?    @relation(fields: [semester_id], references: [id])
  CourseUser      CourseUser[]
}

model Prerequisite {
  id        Int    @id @default(autoincrement())
  course_id String
  prereq_id String
}

model User {
  id             Int          @id @default(autoincrement())
  first_name     String       @db.VarChar(255)
  last_name      String       @db.VarChar(255)
  preferred_name String       @db.VarChar(255)
  gpa            Float
  email          String       @unique @db.VarChar(255)
  address        String       @db.VarChar(255)
  phone          String       @db.VarChar(255)
  password       String       @db.VarChar(255)
  is_admin       Boolean?     @default(false)
  CourseUser     CourseUser[]
}

model CourseUser {
  id            Int          @id @default(autoincrement())
  course_id     Int
  user_id       Int
  is_instructor Boolean      @default(false)
  is_ta         Boolean      @default(false)
  course_grade  Int?         @default(100)
  is_enrolled   Boolean      @default(true)
  course        Course       @relation(fields: [course_id], references: [id])
  user          User         @relation(fields: [user_id], references: [id])
  Assignment    Assignment[]
}

model Assignment {
  id             Int        @id @default(autoincrement())
  name           String     @db.VarChar(255)
  course_user_id Int        @unique
  due_date       DateTime   @db.Date
  submitted      Boolean    @default(false)
  grade          Int?
  published      Boolean    @default(false)
  is_quiz        Boolean    @default(false)
  is_exam        Boolean    @default(false)
  courseUser     CourseUser @relation(fields: [id], references: [id])
}
